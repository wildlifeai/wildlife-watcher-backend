# Check strapi logs
docker compose -f docker-compose.prod.yml logs strapi

# Check nginx logs
docker compose -f docker-compose.prod.yml logs nginx

# Get a shell in database
docker compose -f docker-compose.prod.yml exec strapiDB psql -U strapi

# Restart a specific service
docker compose -f docker-compose.prod.yml restart strapi

# === INSTRUCTIONS ===
# On a fresh Ubuntu VM, copy and paste everything below this line into your terminal
# ==================

# Get GitHub credentials
read -p "Enter your GitHub username: " GITHUB_USERNAME && \
stty -echo && \
printf "Enter your GitHub PAT (with read:packages and repo scope): " && \
read CR_PAT && \
stty echo && \
printf "\n"

# Create /opt if needed and set permissions
if [ ! -d "/opt" ]; then sudo mkdir -p /opt; fi && \
sudo chown -R $USER:$USER /opt

# Clone the project (private repo, auth needed)
cd /opt && \
git clone https://${GITHUB_USERNAME}:${CR_PAT}@github.com/wildlifeai/wildlife-watcher-backend.git && \
cd wildlife-watcher-backend

# Make Docker install script executable and run it
chmod +x deploy/01_install_docker.sh && \
./deploy/01_install_docker.sh

# Login to GitHub Container Registry with credentials
# You may need to run Get GitHub credentials again if echo $CR_PAT is empty.

echo $CR_PAT | docker login ghcr.io -u $GITHUB_USERNAME --password-stdin

# Make setup script executable and run it
chmod +x deploy/02_setup_app.sh
./deploy/02_setup_app.sh
