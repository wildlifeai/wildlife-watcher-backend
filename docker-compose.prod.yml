services:
  traefik:
    image: "traefik:v3.3"
    container_name: wildlife-traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL:-admin@localhost}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    restart: unless-stopped

  strapi:
    image: ghcr.io/wildlifeai/wildlife-watcher-backend:main
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./public/uploads:/opt/app/public/uploads
      - ./backups:/opt/app/backups
    depends_on:
      - strapiDB
    labels:
      - "traefik.enable=true"
      # Redirect HTTP to HTTPS
      - "traefik.http.routers.strapi.entrypoints=web"
      - "traefik.http.routers.strapi.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.strapi.middlewares=redirect-to-https"
      # HTTPS configuration
      - "traefik.http.routers.strapi-secure.entrypoints=websecure"
      - "traefik.http.routers.strapi-secure.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.strapi-secure.tls=true"
      - "traefik.http.routers.strapi-secure.tls.certresolver=myresolver"
      - "traefik.http.services.strapi.loadbalancer.server.port=1337"
      # Middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  strapiDB:
    image: postgres:15.10-alpine
    ports:
      - "5432:5432"
    platform: linux/amd64
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
