# Creating multi-stage build for production
FROM node:20-alpine as build
RUN apk update && apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev vips-dev git > /dev/null 2>&1
# TODO For test, write production when ready
ENV NODE_ENV=development

WORKDIR /opt/
COPY package.json package-lock.json ./
RUN npm install -g node-gyp
RUN npm install --production --fetch-timeout=600000
ENV PATH=/opt/node_modules/.bin:$PATH

WORKDIR /opt/app
COPY . .

# Copy the environment file during build
COPY .env.production .env

RUN npm run build

# Creating final production image
FROM node:20-alpine
RUN apk add --no-cache vips-dev

WORKDIR /opt/
COPY --from=build /opt/node_modules ./node_modules
WORKDIR /opt/app
COPY --from=build /opt/app ./
ENV PATH=/opt/node_modules/.bin:$PATH

RUN chown -R node:node /opt/app
USER node
EXPOSE 1337
# TODO For test, write CMD ["npm", "run", "start"]  when ready
CMD ["npm", "run", "develop", "--", "--debug"]